import library [varcopy]

var x = 10

// Run Python Code
[plang python]
import random

print(x)
x = random.randint(0,9999)
y = int(x * x / x)
[endplang]

// Run Lua Code
print_divider()
[plang lua]
local name = "Lua"
print("Hello from " ..name.. "!")
print(x)
[endplang]

print_divider()
[plang ruby]
result = 3 + 4

print result
[endplang]

print_divider()
[plang f#]
module Integers =
    let sampleInteger = 176

    // Do some arithmetic starting with the first integer
    let sampleInteger2 = (sampleInteger / 4 + 5 - 7) * 4

    // A list of the numbers from 0 to 99
    let sampleNumbers = [0 .. 9]

    // A list of tuples containing all the numbers from 0 to 99 and their squares
    let sampleTableOfSquares = [for i in 0 .. 9 -> (i, i * i)]

    // Print the table of squares
    printfn "The table of squares from 0 to 9 is:\n%A" sampleTableOfSquares

// Basic functions
module BasicFunctions =
    // Define a function that accepts an integer argument and returns an integer
    let func1 x = x * x + 3

    // Apply the function
    let result1 = func1 25
    printfn "The result of squaring the integer 25 and adding 3 is %d" result1
[endplang]

// Print the Variables
print_divider()
print(a)
print(b)
print(x)
print(y)

// Testing Functions are Variables Inside Functions
def h()
print("xyz")
var v = 1
print("x")
endf

// Run the Function `h` and the function `abc` which is in a library
print_divider()
h()
abc()

// Print the value of `v` and prints `hi`
print_divider()
print(v)
print('hi')
